#!/bin/bash

proxy_conf_file='/etc/apt/apt.conf.d/02proxy'
action=''
set_proxy_name=''
declare -i set_proxy_use=0

function usage() {
	echo "usage: apt-proxy <action> [params]"
	echo "action must be one of the following:"
	echo "  info                 displays the current proxy configuration"
	echo "  enable               enable the usage of proxy"
	echo "  disable              disable the usage of proxy"
	echo "  set <url> [on|off]   sets the proxy address and enables/disables it."
	exit 0
}

function setProxy() {
	local newproxy="$1"
	declare -i useproxy="$2"
	if [ ! -z "$newproxy" ]; then
		[ $useproxy -eq 0 ] && prefix='//' || prefix=''
		scriptfile=`readlink -f "$0"`
		(
			echo "//"
			echo "// THIS FILE IS AUTOMATICALLY GENERATED BY"
			echo "// $scriptfile"
			echo "//"
			echo "${prefix}Acquire::http { Proxy \"$newproxy\"; };"
			echo "//"
			echo "// EOF"
			echo "//"
		) > "$proxy_conf_file"
	else
		[ -f "$proxy_conf_file" ] && rm "$proxy_conf_file" || true
	fi
}

function getProxy() {
	local current_proxy=''
	if [ -r "$proxy_conf_file" ]; then
		current_proxy=`awk -F '[\" ;]' '/[[:space:]#/]*Acquire::http[[:space:]]+\{[[:space:]]+Proxy[[:space:]]+\".*\";[[:space:]]+\};$/ { print $5}' "$proxy_conf_file"`
	fi
	echo "$current_proxy"
}

function enableProxy() {
	declare -i useproxy="$1"
	local current_proxy=''
	if [ -r "$proxy_conf_file" ]; then
		[ $useproxy -eq 0 ] && prefix="// " || prefix=""
		
		tmp=$(mktemp "$proxy_conf_file.XXXXXX") || return
		chmod --reference=$proxy_conf_file $tmp
		chown --reference=$proxy_conf_file $tmp
		
		awk -F '[\" ;]' "/[[:space:]#/]*Acquire::http[[:space:]]+\{[[:space:]]+Proxy[[:space:]]+\\\".*\\\";[[:space:]]+\};$/ { print \"${prefix}Acquire::http { Proxy \\\"\" \$5 \"\\\"; };\"; next; }
		/.*/ { print \$0 }" "$proxy_conf_file" > "$tmp"
		
		if [ $? -eq 0 ]; then
			mv "$tmp" "$proxy_conf_file"
		fi
	fi
}

# parse command line arguments
while [ $# -ne 0 ]; do
	case "$1" in
	"-?"|"-h"|"--help") usage;;
	'info') action='info'; ;;
	'enable') action='enable'; ;;
	'disable') action='disable'; ;;
	'set') 
		action='set'; 
		set_proxy_name="$2"; shift; 
		case "$2" in 
			'enable'|'on'|'1'|'true') set_proxy_use=1; shift; ;;
			'disable'|'off'|'0'|'false') set_proxy_use=0; shift; ;;
			*) set_proxy_use=1; ;;
		esac
		;;
	*)
		echo "Unrecognized parameter $1"
		exit 1
	;;
	esac
	shift
done

[ -z "$action" ] && action='info'

case "$action" in
	'info'|'get')
		getProxy
		;;
	'enable')
		enableProxy 1
		;;
	'disable')
		enableProxy 0
		;;
	'set')
		setProxy "$set_proxy_name" $set_proxy_use
		;;
esac
