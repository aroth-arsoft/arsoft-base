#!/bin/sh

# Check for sharename on SMB with nagios
# Michael Hodges <michael@va.com.au> 2011-03-04
# Modified version of check_smb by Dave Love <fx@gnu.org>
# combined check_smb_share by Michael Hodges with check_smb by Dave Love

REVISION=0.10
PROGNAME=`/usr/bin/basename $0`
PROGPATH=`echo $0 | sed -e 's,[\\/][^\\/][^\\/]*$,,'`

. $PROGPATH/utils.sh

usage () {
    echo "\
Nagios plugin to check for SAMBA Share. Use anonymous login if user name is not supplied. 

Usage:
  $PROGNAME -H <host>
  $PROGNAME -H <host> -s <sharename>
  $PROGNAME -H <host> -s <sharename> -u <user> -p <password>
  $PROGNAME --help
  $PROGNAME --version
"
}

help () {
    print_revision $PROGNAME $REVISION
    echo; usage; echo; support
}

if [ $# -lt 1 ]; then
    usage
    exit $STATE_UNKNOWN
fi

name_resolve_order=''
user="guest"
pasword=""

while test -n "$1"; do
    case "$1" in
	--help | -h)
	    help
	    exit $STATE_OK;;
	--version | -V)
	    print_revision $PROGNAME $REVISION
	    exit $STATE_OK;;
	-H)
	    shift
	    host="$1";;
	-s)
	    shift
	    share="$1";;
	-u)
	    shift
	    user="$1";;
	-p)
	    shift
	    password="$1";;
	-R)
	    shift
	    name_resolve_order="$1";;
	*)
	    usage; exit $STATE_UNKNOWN;;
    esac
shift
done

# use grepable output from smbclient
stdout=`LANG=C /usr/bin/smbclient -U"$user"%"$password" -g -N -L "$host" -R "$name_resolve_order" 2>&1`
res=$?
if [ -z "$share" ]; then
	if [ $res -eq 0 ]; then
		header=`echo "$stdout" | grep Server= | head -n 1`
		echo "OK $header"
		exit $STATE_OK
	else
		err=`echo "$stdout" | head -n 1`
		echo "CRITICAL SMB: $err"
		exit $STATE_CRITICAL
	fi
else
	if [ $res -eq 0 ]; then
		description=`echo "$stdout" | awk "BEGIN { FS=\"|\"; res=1 } /^Disk\|$share\|/ { print \\\$3; res=0;}; END { exit res;}"`
		res=$?
		if [ $res -eq 0 ]; then
			echo "OK SMB Share: $share: $description"
			exit $STATE_OK
		else
		echo "$stdout"
		echo "$res"
		echo "$description"
			echo "CRITICAL SMB Share: $share not available."
			exit $STATE_CRITICAL
		fi
	else
		err=`echo "$stdout" | head -n 1`
		echo "CRITICAL SMB: $err"
		exit $STATE_CRITICAL
	fi
fi
