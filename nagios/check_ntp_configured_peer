#!/bin/bash
#
# check_ntp_configured_peer - nagios plugin
#
# Checks the configure ntp peer for the time

# Include standard Nagios library
THIS_FILE=`readlink -f "$0"`
PROGNAME=`basename "$THIS_FILE"`
PROGPATH=`dirname "$THIS_FILE"`

. $PROGPATH/utils.sh || exit 3

if [ -f $PROGPATH/ntpex.cfg ]; then
	PLUGIN_DIR='/usr/lib/nagios/plugins'
else
	PLUGIN_DIR="$PROGPATH"
fi

if [ -f '/var/lib/ntp/ntp.conf.dhcp' ]; then
	NTP_CONF='/var/lib/ntp/ntp.conf.dhcp'
elif [ -f '/etc/ntp.conf' ]; then
	NTP_CONF='/etc/ntp.conf'
else
	NTP_CONF=''
fi

if [ -z "$NTP_CONF" ]; then
	RESULT='No ntp configuration found.'
	RES=$STATE_CRITICAL

	echo $RESULT
	exit $RET
else
	ntp_servers=`awk '/^server/ { print $2}' "$NTP_CONF"`
	declare -a ntp_servers_real
	for srv in $ntp_servers; do
		# skip all loopback servers
		[[ $srv =~ ^127\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]] && continue
		ntp_servers_real+=($srv)
	done
	
	if [ ${#ntp_servers_real[@]} -eq 0 ]; then
		echo "No NTP server configured."
		exit $STATE_CRITICAL
	else
		#echo "server ${ntp_servers_real[0]}"
		#echo "$PLUGIN_DIR/check_ntp_time -H ${ntp_servers_real[0]} $@"
		"$PLUGIN_DIR/check_ntp_time" -H "${ntp_servers_real[0]}" $@; RET=$?
	fi
fi
