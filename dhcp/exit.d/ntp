#!/bin/bash

NTP_CONF=/etc/ntp.conf
NTP_DHCP_CONF=/var/lib/ntp/ntp.conf.dhcp

ntp_server_restart() {
	invoke-rc.d ntp try-restart
}

ntp_servers_setup_remove() {
	if [ ! -e $NTP_DHCP_CONF ]; then
		return
	fi
	rm -f $NTP_DHCP_CONF
	ntp_server_restart
}


ntp_servers_setup_add() {
	if [ -z "$ntp_servers" ]; then
		ntp_servers_setup_remove
		return
	fi

	tmp=$(mktemp "$NTP_DHCP_CONF.XXXXXX") || return
	chmod --reference=$NTP_CONF $tmp
	chown --reference=$NTP_CONF $tmp

	log_info "ntp_servers_setup_add ntp_servers=$ntp_servers"
	(
	  echo "# This file was copied from $NTP_CONF with the server options changed"
	  echo "# to reflect the information sent by the DHCP server.  Any changes made"
	  echo "# here will be lost at the next DHCP event.  Edit $NTP_CONF instead."
	  echo
	  echo "# NTP server entries received from DHCP server"
	  for server in $ntp_servers; do
		echo "server $server iburst"
	  done
	  echo
	  sed -r -e '/^ *(server *[^1][^2][^7]\.|peer).*$/d' $NTP_CONF
	) >>$tmp
	if [ -f "$NTP_DHCP_CONF" ]; then
		if ! /usr/bin/diff -q "$tmp" "$NTP_DHCP_CONF" > /dev/null; then
			mv "$tmp" "$NTP_DHCP_CONF"
			ntp_server_restart
			log_info "ntp_servers_setup_add restart ntp server"
		else
			# remove temp file because we no longer need it
			rm "$tmp"
		fi
	else
		mv "$tmp" "$NTP_DHCP_CONF"
		ntp_server_restart
		log_info "ntp_servers_setup_add restart ntp server"
	fi
}

case $reason in
	# events from dhclient
	BOUND|RENEW|REBIND|REBOOT|EXPIRE|FAIL|RELEASE|STOP)
		# DO NOTHING HERE because the original dhcp exit script for ntp
		# is executed by the dhclient and this script takes care about
		# the rest.
		;;
	# events from network-manager
	up|vpn-up|dhcp4-change|dhcp6-change)
		if [ $interface != 'lo' ]; then
			ntp_servers_setup_add
		else
			true
		fi
		;;
	down|vpn-down|dhcp4-change|dhcp6-change)
		if [ $interface != 'lo' ]; then
			ntp_servers_setup_remove
		else
			true
		fi
		;;
	hostname)
		;;
esac
