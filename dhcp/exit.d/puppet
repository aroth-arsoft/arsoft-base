#!/bin/sh
PUPPET_CONF='/etc/puppetlabs/puppet/puppet.conf'
PUPPET_AGENT_DEFAULTS='/etc/default/puppet'
STATE_FILE='/var/lib/dhcp/_puppet_interface'

[ ! -f "$PUPPET_CONF" ] && PUPPET_CONF='/etc/puppet/puppet.conf' || true

puppet_agent_restart() {
	local puppet_agent_start=`ini-util "$PUPPET_AGENT_DEFAULTS" --value --get "START"`
	if [ "$puppet_agent_start" == 'yes' ]; then
		invoke-rc.d puppet restart &
		true
	else
		true
	fi
}

puppet_update_conf() {

	if [ ! -z "$domain_name" ]; then
		local srv_record=`get_dns_srv_record 'x-puppet' 'tcp'`
		if [ ! -z "$srv_record" ]; then
			local srv_name="${srv_record% *}"
			local srv_port="${srv_record##* }"
			#newserver="${srv_name%\.}:${srv_port}"
			#puppet does not support to specify a different port yet
			newserver="${srv_name}"
		else
			newserver=''
		fi
		newpluginsync=`get_dns_txt_record "_pluginsync._puppet._config.$domain_name."`
	fi
	[ -r "$PUPPET_CONF" ] && oldserver=`ini-util "$PUPPET_CONF" --value --get "main/server"` || oldserver=''
    [ -z "$newserver" ] && newserver="$oldserver"

	if [ ! -z "$newserver" ]; then
		if is_interface_for_host "$newserver"; then
			[ -r "$PUPPET_CONF" ] && oldpluginsync=`ini-util "$PUPPET_CONF" --value --get "main/pluginsync"` || oldpluginsync=''
			[ -z "$oldpluginsync" ] && oldpluginsync='true'
			[ -z "$newpluginsync" ] && newpluginsync="$oldpluginsync"

			local client_hostname=`hostname -f`
			cat > "$STATE_FILE" <<STATE_FILE_EOF
interface=$interface
hostname=$client_hostname
server=$newserver
STATE_FILE_EOF
            log_info "puppet interface: $interface"
			log_info "puppet server: $newserver"
			log_info "puppet plugin sync: $newpluginsync"
			log_info "puppet client hostname: $(hostname -f)"
			if [ "$oldserver" != "$newserver" -o "$oldpluginsync" != "$newpluginsync" ]; then
				ini-util "$PUPPET_CONF" --edit "main/server=$newserver" "main/pluginsync=$newpluginsync"
				RES=$?
				if [ $RES -eq 0 ]; then
					log_info "puppet reload service to take over changed settings"
					puppet_agent_restart
				else
					false
				fi
			else
				log_info "puppet reload service to take over changed network settings"
				puppet_agent_restart
			fi
		else
			puppet_iface=`get_interface_for_host "$newserver"`
			log_info "puppet host $newserver is not accessed through $interface must be $puppet_iface"
		fi
	fi
}

puppet_release_conf() {

	# if state file does not exist bail out
	[ ! -r "$STATE_FILE" ] && return

	local puppet_interface=`awk -F '=' '/interface/ { print $2 }' "$STATE_FILE"`
	if [ "$interface" == "$puppet_interface" ]; then
		rm "$STATE_FILE" || true
	fi
}

case $reason in
	BOUND|RENEW|REBIND|REBOOT)
		if [ $interface != 'lo' ]; then
			puppet_update_conf
		else
			true
		fi
		;;
	EXPIRE|FAIL|RELEASE|STOP)
		puppet_release_conf
		;;
	# events from network-manager
	up|vpn-up|dhcp4-change|dhcp6-change)
		if [ $interface != 'lo' ]; then
			puppet_update_conf
		else
			true
		fi
		;;
	down|vpn-down|hostname)
		;;
esac
