#!/bin/bash

CUPS_CLIENT_CONF='/etc/cups/client.conf'
CUPS_PRINTERS_CONF='/etc/cups/printers.conf'
DEFAULT_CUPS='/etc/default/cups'
BACKUP_DIR='/run/cups'
BACKUP_CUPS_CLIENT_CONF="$BACKUP_DIR/client.conf.bak"

CUPS_USE_DNS_INFO=0
[ -f "$DEFAULT_CUPS" ] && source "$DEFAULT_CUPS"

if [ "$CUPS_USE_DNS_INFO" == 'auto' ]; then
	CUPS_USE_DNS_INFO=0
fi

cups_update_conf() {
	local cups_server
	local cups_encryption
	if [ ! -z "$domain_name" ]; then
		local current_cups_server=''
		local current_cups_encryption=''
		if [ -r "$CUPS_CLIENT_CONF" ]; then
			current_cups_encryption=`awk '/^ *(Encryption)/ { print $2 }' "$CUPS_CLIENT_CONF"`
			current_cups_server=`awk '/^ *(ServerName)/ { print $2 }' "$CUPS_CLIENT_CONF"`
		fi
		cups_server=`/usr/bin/dns-query --batch --first SRV "_ipp._tcp.$domain_name." --prefered-value="$current_cups_server"`
		cups_encryption=`/usr/bin/dns-query --batch --first TXT "_encryption._ipp._config.$domain_name." --prefered-value="$current_cups_encryption"`

		[ -z "$cups_encryption" ] && cups_encryption='IfRequested'
	else
		cups_encryption=''
		cups_server=''
	fi
	log_info "cups_server $cups_server"
	log_info "cups_encryption $cups_encryption"
	
	if [ -f "$CUPS_PRINTERS_CONF" ]; then
		if [ ! -z "$cups_server" ]; then
			log_info "add remote printers from $cups_server"
			# using local CUPS server and import all remote printers
			msg=`/usr/bin/cups-admin --server localhost:631 --add-remote "$cups_server" 2>&1`
			RES=$?
			if [ $RES -eq 0 ]; then
				# We have added printer from the remote server to the local one
				# so now we should use it.
				cups_server='localhost:631'
			else
				log_err "cups-admin error $RES: $msg"
				# something went wrong, so no further actions
				cups_encryption=''
				cups_server=''
			fi
		fi
	fi

	if [ ! -z "$cups_server" -a ! -z "$cups_encryption" ]; then
		tmp=$(mktemp "$CUPS_CLIENT_CONF.XXXXXX") || return
		[ -f "$CUPS_CLIENT_CONF" ] && chmod --reference="$CUPS_CLIENT_CONF" $tmp
		[ -f "$CUPS_CLIENT_CONF" ] && chown --reference="$CUPS_CLIENT_CONF" $tmp
		#[ $verbose -ne 0 ] && echo "apply config from $CUPS_CLIENT_CONF to $tmp"
		(
			sed -r -e "s@^[ ]*ServerName[ ]+(.*)\$@ServerName $cups_server@" \
				-e "s@^[ #]*Encryption[ ]+(.*)\$@Encryption $cups_encryption@" \
				"$CUPS_CLIENT_CONF"
		) >>$tmp
		#[ $verbose -ne 0 ] && cat "$tmp"
		RES=$?
		if [ $RES -eq 0 ]; then
			[ ! -d "$BACKUP_DIR" ] && mkdir "$BACKUP_DIR"
			mv "$CUPS_CLIENT_CONF" "$BACKUP_CUPS_CLIENT_CONF"
			mv "$tmp" "$CUPS_CLIENT_CONF"
		else
			rm -f "$tmp"
		fi
	fi
}

cups_restore_conf() {
	if [ -f "$BACKUP_CUPS_CLIENT_CONF" ]; then
		mv "$BACKUP_CUPS_CLIENT_CONF" "$CUPS_CLIENT_CONF"
	fi
}

case $reason in
	BOUND|RENEW|REBIND|REBOOT)  
		if [ $CUPS_USE_DNS_INFO -ne 0 -a $interface != 'lo' ]; then
			cups_update_conf
		else
			true
		fi
		;;
	EXPIRE|FAIL|RELEASE|STOP)
		;;
	NETWORK_UP)
		;;
	NETWORK_DOWN)
		cups_restore_conf
		;;
	# events from network-manager
	up|vpn-up|dhcp4-change|dhcp6-change)
		if [ $CUPS_USE_DNS_INFO -ne 0 -a $interface != 'lo' ]; then
			cups_update_conf
		else
			true
		fi
		;;
    down|vpn-down)
		cups_restore_conf
		;;
    hostname)
        ;;
esac
